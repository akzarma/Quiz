

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Akshay
 */
public class StudentLogin extends javax.swing.JFrame {

    /**
     * Creates new form StudentLogin
     */
   
    int sec = 59;
    int min = 29;
    Boolean isIt = false;
    StudentPage stp=new StudentPage();
    static public String name,user_global;
    int score;
    static public ResultSet current_user_set;
    boolean submitted=false;
    static ArrayList<Integer> ID=new ArrayList<>();
    static public double total_q=0;
   static public String Answer_1;
    
    
    public StudentLogin() {
        this.setUndecorated(true);
       // this.setAlwaysOnTop(true);
        
        initComponents();
        Toolkit tk=Toolkit.getDefaultToolkit();
        int xsize=tk.getScreenSize().width;
        int ysize=tk.getScreenSize().height;
        this.setSize(xsize, ysize);
        
        
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        t2 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        t2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        t2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        t2.setOpaque(false);
        jPanel1.add(t2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 255, 460, 80));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jButton1.setText("Login");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 460, 80));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jButton2.setText("Back");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 460, 80));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Password");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Username");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        t1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        t1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        t1.setOpaque(false);
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });
        jPanel1.add(t1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 95, 460, 80));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(420, 100, 480, 570);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/1366768keyboard.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 1366, 768);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jbutton1StartMouseClicked(java.awt.event.MouseEvent evt) {                                      
         
    }        
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
       
        
        
        
        try{

            //Class.forName("org.apache.derby.jdbc.ClientDriver");
            //Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/sun-appserv-samples","APP","APP");
            
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection(Akz.ip, "root", "");
            //mysql server
            final Statement st=con.createStatement();

            //ResultSet rs=st.executeQuery("select * from APP.student");
            ResultSet rs=st.executeQuery("select * from student");//mysql server
            ResultSetMetaData meta=rs.getMetaData();
            int found=0;
            while(rs.next()){
                
                String usr=rs.getObject("username").toString();
                if(t1.getText().equals(usr)){
                    user_global=usr;
                    //StudentPage.usr_global=usr;
                    
                    found=1;
                    //System.out.print(rs.getObject("username"));
                    break;
                }
            
            }
            
             if(found==0){
                    JOptionPane.showMessageDialog(null,"Enter Correct Username","Wrong Credentials",JOptionPane.ERROR_MESSAGE);
                }
            
            String pwd=rs.getObject("password").toString();
            if(t2.getText().equals(pwd)){
                
                
                boolean given=rs.getBoolean("given");
                if(!given){
                current_user_set=rs;
                StudentPage.current_user_set=rs;
                this.setVisible(false);
                //StudentPage stp=new StudentPage();
                stp.setVisible(true);
                StudentPage.welcomestudentpage.setText("Welcome "+rs.getObject("name").toString());
                name=rs.getObject("name").toString();
               // StudentPage.name_global=name;
                
                
                
                
                //this code is for whenadmin changed the status to !given but student already submitted the exam
                 if(StudentPage.submitted && !given){
                         StudentPage.submitted=false;
                }
                
                 
                 
                 
                 
                 
                 ResultSet rs_qna=st.executeQuery("select * from qna");
                // ResultSetMetaData meta_qn=rs_qna.getMetaData();
                 total_q=0;
                 while(rs_qna.next()){
                     total_q++;
                 }
               
                 
                 //Shufflingggg using Collection.shuffle............!!!!!!!!!!!!!!!
                 
                
                 ID.clear();
                for(int i=1;i<=total_q;i++)
                    ID.add(i);
                Collections.shuffle(ID);
                   
                 for(int i=0;i<total_q;i++)
                    System.out.println(ID.get(i));
                     
                     
                     System.out.println("-------------");
                     
                 ///// first question 
                 ResultSet rs_qna1=st.executeQuery("select * from qna where id = "+ID.get(0)+"");
                 rs_qna1.next();
                 //System.out.print(rs_qna.getObject("question"));
                //// System.out.print("\nyha tak to chl gya2"+rs_qna1.getObject("question").toString());
                 StudentPage.Question_Field.setText(rs_qna1.getObject("question").toString());
                 
                 StudentPage.Field_A.setText(rs_qna1.getObject("a").toString());
                 StudentPage.Field_B.setText(rs_qna1.getObject("b").toString());
                 StudentPage.Field_C.setText(rs_qna1.getObject("c").toString());
                 StudentPage.Field_D.setText(rs_qna1.getObject("d").toString());
               
                 StudentPage.Q_ID_label.setText(rs_qna1.getObject("id").toString());
                 
                 Answer_1=rs_qna1.getObject("answer").toString();
                 //TIMER FOR FIRST PAGEEEEE
                
                final Timer timer = new Timer();
                final Timer timer1 = new Timer();//new timer
                sec = 59; //setting the counter to 10 sec
                min = 29;
                TimerTask task = new TimerTask() {         
            public void run() {  
                
                StudentPage.sec.setText(Integer.toString(sec));
                sec --;
                if(sec<0){
                    sec=59;
                    StudentPage.min.setText(Integer.toString(--min));
                }
                if(min ==0 && sec==0){
                    timer.cancel();
                    
                    StudentPage.submitted=true;
                    
                    
                    score=StudentPage.score;
                    int scoreplus=StudentPage.scoreplus;
                    int scoreneg=StudentPage.scoreneg;
                    
                    switch(StudentLogin.Answer_1.toUpperCase()){
                     case "A":
                                if(StudentPage.RadioA.isSelected()){
                                    score+=scoreplus;
                                }
                                else
                                    score-=scoreneg;
                         break;
                     case "B":
                                if(StudentPage.RadioB.isSelected()){
                                    score+=scoreplus;
                                }
                                else
                                    score-=scoreneg;
                         break;
                     case "C":
                                if(StudentPage.RadioC.isSelected()){
                                    score+=scoreplus;
                                }
                                else
                                    score-=scoreneg;
                         break;
                     case "D":
                                if(StudentPage.RadioD.isSelected()){
                                    score+=scoreplus;
                                }
                                else
                                    score-=scoreneg;
                         break;
                     default:
                         break;
                         
                 }
                    
                
                    
                    StudentLogin stl=new StudentLogin();
                    stp.setVisible(false);
                    thanks ty=new thanks();       
                    ty.setVisible(true);
            
                    thanks.thanks_name.setText(name);
                    thanks.thanks_score.setText(""+score);
                    
                    
                    
                    try {
                    
                    
                    
                  
                        st.executeUpdate("update student set given = 1,score = "+score+" where username = '"+user_global+"'");
                        score=0;
                        StudentPage.score=0;
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
                submitted=StudentPage.submitted;
                if(submitted)
                    timer.cancel();
            }
            
        };
        timer.scheduleAtFixedRate(task, 0,1000); 
                }
                else{
                    JOptionPane.showMessageDialog(null,"You have alredy given the Exam.(If not so, contact Admin).Your Score is "+rs.getObject("score")+".","Already Given",JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
            JOptionPane.showMessageDialog(null,"Enter Correct Password","Wrong Credentials",JOptionPane.ERROR_MESSAGE);
            this.setVisible(false);
            Akz ak=new Akz();
            ak.setVisible(true);
            }

            /*
            for(int i=1;i<=meta.getColumnCount();i++){
                String cn=(String)meta.getColumnName(i);
                l1.setText(l1.getText()+cn+"\t");
            }
            l1.setText(l1.getText()+"\n");

            while(rs.next()){
                for(int i=1;i<=meta.getColumnCount();i++){
                    String obj=(String) rs.getObject(i);
                    l1.setText(l1.getText()+obj+"\t");
                }
                l1.setText(l1.getText()+"\n");

            }*/

       
                
        
        
        
        
 }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }    
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        this.setVisible(false);
        Akz ak=new Akz();
        ak.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField t1;
    private javax.swing.JPasswordField t2;
    // End of variables declaration//GEN-END:variables

}